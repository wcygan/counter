plugins {
    id 'application'
    id 'com.google.protobuf' version '0.8.17'
}

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/" // Add this line
    }
}

application {
    mainClass = 'io.counter.filter.App'
}

test {
    // JUnit 4.
    useJUnit()
}

dependencies {
    // App dependencies.
    implementation "org.apache.beam:beam-sdks-java-core:2.53.0"
    implementation "org.apache.beam:beam-runners-direct-java:2.53.0"
    implementation "org.apache.beam:beam-sdks-java-io-kafka:2.53.0" // Add this line
    implementation "org.apache.kafka:kafka-clients:2.8.1" // Add this line
    implementation "org.slf4j:slf4j-jdk14:1.7.32"
    implementation 'com.google.protobuf:protobuf-java:3.19.1'

    // Tests dependencies.
    testImplementation "junit:junit:4.13.2"
    testImplementation 'org.hamcrest:hamcrest:2.2'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.19.1'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.61.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        java {
            srcDir 'src'
            srcDir '../generated/java' // path to your generated files
        }
    }
    test {
        java {
            srcDir 'src/test/java' // test source directory
        }
        resources {
            srcDir 'src/test/resources' // test resources directory, if you have any
        }
    }
}

// Package a self-contained jar file.
jar {
    archiveBaseName = 'pipeline'
    destinationDirectory = file('build')
    manifest {
        attributes 'Main-Class': 'io.counter.filter.App'
    }
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}